{"ast":null,"code":"var _jsxFileName = \"E:\\\\sgp\\\\frontend\\\\src\\\\components\\\\Student.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; //import Modal from \"react-bootstrap/Modal\";\n//import Button from 'react-bootstrap/Button';\n\nimport './Student.css';\nimport { useHistory } from \"react-router-dom\"; //import Login from \"./login\";\n//import Login from \"./login\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Student = () => {\n  _s();\n\n  // Swift of login and signup module\n  const signup = \"0px\";\n  const [currentSignup, setSignup] = useState(signup); //const login = \"400px\";\n  //const [currentLogin, setLogin] = useState(login);\n\n  const btnDiv = \"0\";\n  const [currentBtnDiv, setBtnDiv] = useState(btnDiv);\n  /* const handleCLickLogin = () => {\r\n       let newSignup = \"-400px\";\r\n       setSignup(newSignup);\r\n       let newLogin = \"0px\";\r\n       setLogin(newLogin);\r\n       let newBtnDiv = \"50%\";\r\n       setBtnDiv(newBtnDiv);\r\n   }*/\n\n  const handleCLickSignup = () => {\n    let newSignup = \"0px\";\n    setSignup(newSignup); //let newLogin = \"400px\";\n    //setLogin(newLogin);\n\n    let newBtnDiv = \"0\";\n    setBtnDiv(newBtnDiv);\n  }; // Modal open close for signup successful\n  //const [show, setShow] = useState(false);\n  //const handleClose = () => setShow(false);\n  //const handleShow = () => setShow(true);\n  // redirecting to student home on clicking login button\n  //const handleLoginButton = () => {\n  //history.push(\"/Student\");\n  //}\n\n\n  const history = useHistory(); // Swift of login and signup module\n\n  const handleCLickLogin = () => {\n    history.push(\"/StudentLogin\");\n  };\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [enrollment, setEnrollment] = useState('');\n  const [repassword, setRepassword] = useState('');\n\n  async function registerUser(event) {\n    event.preventDefault();\n    const response = await fetch('http://localhost:1337/Student', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        enrollment,\n        password,\n        repassword\n      })\n    });\n    const data = await response.json();\n\n    if (data.status === 'ok') {\n      history.push('/StudentLogin');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              left: currentBtnDiv\n            },\n            id: \"btn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            style: {\n              outline: 'none'\n            },\n            onClick: handleCLickSignup,\n            className: \"toggle-btn\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            style: {\n              outline: 'none'\n            },\n            className: \"toggle-btn\",\n            onClick: handleCLickLogin,\n            children: \"Log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          style: {\n            left: currentSignup\n          },\n          id: \"signup\",\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            type: \"email\",\n            placeholder: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: enrollment,\n            onChange: e => setEnrollment(e.target.value),\n            type: \"enrollment\",\n            placeholder: \"Enrollment ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            type: \"password\",\n            placeholder: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: repassword,\n            onChange: e => setRepassword(e.target.value),\n            type: \"repassword\",\n            placeholder: \"Re-entered password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: registerUser,\n            className: \"btn-submit\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Student, \"C5jh3pqjjO9LtRR9n5g0Vi4NR2c=\", false, function () {\n  return [useHistory];\n});\n\n_c = Student;\nexport default Student;\n\nvar _c;\n\n$RefreshReg$(_c, \"Student\");","map":{"version":3,"sources":["E:/sgp/frontend/src/components/Student.js"],"names":["React","useState","useHistory","Student","signup","currentSignup","setSignup","btnDiv","currentBtnDiv","setBtnDiv","handleCLickSignup","newSignup","newBtnDiv","history","handleCLickLogin","push","email","setEmail","password","setPassword","enrollment","setEnrollment","repassword","setRepassword","registerUser","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","status","left","outline","e","target","value"],"mappings":"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","sourcesContent":["import React , { useState } from \"react\";\r\n//import Modal from \"react-bootstrap/Modal\";\r\n//import Button from 'react-bootstrap/Button';\r\nimport './Student.css';\r\nimport { useHistory } from \"react-router-dom\";\r\n//import Login from \"./login\";\r\n//import Login from \"./login\";\r\nconst Student = () => {\r\n    // Swift of login and signup module\r\n    const signup = \"0px\";\r\n    const [currentSignup, setSignup] = useState(signup);\r\n    //const login = \"400px\";\r\n    //const [currentLogin, setLogin] = useState(login);\r\n    const btnDiv = \"0\";\r\n    const [currentBtnDiv, setBtnDiv] = useState(btnDiv);\r\n   /* const handleCLickLogin = () => {\r\n        let newSignup = \"-400px\";\r\n        setSignup(newSignup);\r\n        let newLogin = \"0px\";\r\n        setLogin(newLogin);\r\n        let newBtnDiv = \"50%\";\r\n        setBtnDiv(newBtnDiv);\r\n    }*/\r\n    const handleCLickSignup = () => {\r\n        let newSignup = \"0px\";\r\n        setSignup(newSignup);\r\n        //let newLogin = \"400px\";\r\n        //setLogin(newLogin);\r\n        let newBtnDiv = \"0\";\r\n        setBtnDiv(newBtnDiv);   \r\n    }\r\n\r\n\r\n    // Modal open close for signup successful\r\n    //const [show, setShow] = useState(false);\r\n\r\n    //const handleClose = () => setShow(false);\r\n    //const handleShow = () => setShow(true);\r\n    // redirecting to student home on clicking login button\r\n    //const handleLoginButton = () => {\r\n        //history.push(\"/Student\");\r\n    //}\r\n    const history = useHistory();\r\n    // Swift of login and signup module\r\n    const handleCLickLogin = () => {\r\n        history.push(\"/StudentLogin\");\r\n    }\r\n    const [email, setEmail] = useState('')\r\n\tconst [password, setPassword] = useState('')\r\n    const [enrollment, setEnrollment] = useState('')\r\n    const [repassword , setRepassword] = useState('')\r\n    async function registerUser(event) {\r\n\t\tevent.preventDefault()\r\n\r\n\t\tconst response = await fetch('http://localhost:1337/Student', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\temail,\r\n                enrollment,\r\n\t\t\t\tpassword,\r\n                repassword\r\n\t\t\t}),\r\n\t\t})\r\n\r\n\t\tconst data = await response.json()\r\n\r\n\t\tif (data.status === 'ok') {\r\n\t\t\thistory.push('/StudentLogin')\r\n\t\t}\r\n\t}\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                 \r\n                <div className=\"form-container\">\r\n                    <div className=\"button-box\">\r\n                        <div style={{left: currentBtnDiv}} id=\"btn\"></div>\r\n                            <button type=\"button\" style={{outline: 'none'}}  onClick={handleCLickSignup} className=\"toggle-btn\">Sign up</button>\r\n                            <button type=\"button\" style={{outline: 'none'}} className=\"toggle-btn\" onClick={handleCLickLogin}>Log in</button>\r\n                    </div>\r\n                    <form style={{left: currentSignup}}id=\"signup\" className=\"input-group\">\r\n                    <input value={email} onChange={(e) => setEmail(e.target.value)} type=\"email\"placeholder=\"Email\"/>\r\n                    <input value={enrollment} onChange={(e) => setEnrollment(e.target.value)} type=\"enrollment\"placeholder=\"Enrollment ID\"/>\r\n                    <input value={password} onChange={(e) => setPassword(e.target.value)} type=\"password\"placeholder=\"password\"/>\r\n                    <input value={repassword} onChange={(e) => setRepassword(e.target.value)} type=\"repassword\"placeholder=\"Re-entered password\"/>\r\n                        <button type=\"button\" onClick={registerUser} className=\"btn-submit\" >Sign up</button>\r\n                    </form>\r\n                </div>\r\n            </div> \r\n        </>\r\n    )\r\n}\r\nexport default Student\r\n"]},"metadata":{},"sourceType":"module"}